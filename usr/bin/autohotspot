#!/bin/bash
#version 0.95-1-N/HS

#You may share this script on the condition a reference to RaspberryConnect.com 
#must be included in copies or derivatives of this script. 

#Network Wifi & Hotspot with Internet
#A script to switch between a wifi network and an NON Internet routed Hotspot
#For use with a Raspberry Pi zero W or Zero with usb wifi dongle. 
#Also for any Raspberry Pi where an internet routed hotspot is not required.
#Works at startup or with a seperate timer or manually without a reboot
#Other setup required find out more at
#http://www.raspberryconnect.com
echo "-----------------------------" > /home/pi/alfetta/var/log/autohostspot.log
date >>/home/pi/alfetta/var/log/autohostspot.log
echo  "autospot_start" >> /home/pi/alfetta/var/log/autohostspot.log

wifidev="wlan0" #device name to use. Default is wlan0.
#use the command: iw dev ,to see wifi interface name 

IFSdef=$IFS
#These four lines capture the wifi networks the RPi is setup to use
wpassid=$(awk '/ssid="/{ print $0 }' /etc/wpa_supplicant/wpa_supplicant.conf | awk -F'ssid=' '{ print $2 }' ORS=',' | sed 's/\"/''/g' | sed 's/,$//')
IFS=","
ssids=($wpassid)
IFS=$IFSdef #reset back to defaults


#Note:If you only want to check for certain SSIDs
#Remove the # in in front of ssids=('mySSID1'.... below and put a # infront of all four lines above
# separated by a space, eg ('mySSID1' 'mySSID2')
#ssids=('mySSID1' 'mySSID2' 'mySSID3')

#Enter the Routers Mac Addresses for hidden SSIDs, seperated by spaces ie 
#( '11:22:33:44:55:66' 'aa:bb:cc:dd:ee:ff' ) 
mac=()

ssidsmac=("${ssids[@]}" "${mac[@]}") #combines ssid and MAC for checking

createAdHocNetwork()
{
    echo "Create AdHoc Network" >> /home/pi/alfetta/var/log/autohostspot.log
    ip link set dev "$wifidev" down
    ip a add 192.168.100.5/24 brd + dev "$wifidev"
    ip link set dev "$wifidev" up
    systemctl start dnsmasq
    systemctl start hostapd
}

KillHotspot()
{
    echo "Shutting Down Hotspot" >> /home/pi/alfetta/var/log/autohostspot.log
    ip link set dev "$wifidev" down
    systemctl stop hostapd
    systemctl stop dnsmasq
    ip addr flush dev "$wifidev"
    ip link set dev "$wifidev" up
}

ChkWifiUp()
{
	echo "Checking WiFi connection ok" >> /home/pi/alfetta/var/log/autohostspot.log
        sleep 10 #give time for connection to be completed to router 
#      /sbin/wpa_cli -i "$wifidev" status | grep 'ip_address' >> /home/pi/alfetta/var/log/autohostspot.log
	if ! /sbin/wpa_cli -i "$wifidev" status | grep 'ip_address' >/dev/null 2>&1
        then #Failed to connect to wifi (check your wifi settings, password etc)
	       echo 'Wifi failed to connect, falling back to Hotspot.' >> /home/pi/alfetta/var/log/autohostspot.log
          /sbin/wpa_cli terminate "$wifidev" >/dev/null 2>&1
	       createAdHocNetwork
	fi
}

FindSSID()
{
echo "Find SSID" >> /home/pi/alfetta/var/log/autohostspot.log
#Check to see what SSID's and MAC addresses are in range
ssidChk=('NoSSid')
i=0; j=0
until [ $i -eq 1 ] #wait for wifi if busy, usb wifi is slower.
do
#   /sbin/iw dev "$wifidev" scan ap-force | egrep "^BSS|SSID:" |sed  s/'-- associated'//g  >> /home/pi/alfetta/var/log/autohostspot.log
   ssidreply=$((/sbin/iw dev "$wifidev" scan ap-force | egrep "^BSS|SSID:" |sed  s/'-- associated'//g) 2>&1) >/dev/null 2>&1 
#   echo "$ssidreply" >> /home/pi/alfetta/var/log/autohostspot.log
	if echo "$ssidreply" | grep "No such device (-19)" >/dev/null 2>&1; then
	   echo "No Device" >> /home/pi/alfetta/var/log/autohostspot.log
		NoDevice
	elif ! echo "$ssidreply" | grep "resource busy (-16)"  >/dev/null 2>&1 ;then
		i=1
	elif (($j >= 5)); then #if busy 5 times goto hotspot
	   echo "Resource Busy" >> /home/pi/alfetta/var/log/autohostspot.log
                 ssidreply=""
		 i=1
	else #see if device not busy in 2 seconds
	   echo "Resource Busy" >> /home/pi/alfetta/var/log/autohostspot.log
		j=$((j = 1))
		sleep 2
	fi
done

for ssid in "${ssidsmac[@]}"
do
#     echo  "$ssidreply"  |grep "$ssid" >> /home/pi/alfetta/var/log/autohostspot.log
     if (echo "$ssidreply" | grep "$ssid") >/dev/null 2>&1
     then
	      #Valid SSid found, passing to script
              ssidChk=$ssid
              return 0
      else
	      #No Network found, NoSSid issued"
              ssidChk='NoSSid'
     fi
done
}
NoDevice()
{
	#if no wifi device,ie usb wifi removed, activate wifi so when it is
	#reconnected wifi to a router will be available
	echo "No wifi device connected"
	/sbin/wpa_supplicant -B -i "$wifidev" -c /etc/wpa_supplicant/wpa_supplicant.conf >/dev/null 2>&1
	exit 1
}

FindSSID

#Create Hotspot or connect to valid wifi networks
if [ "$ssidChk" != "NoSSid" ] 
then
       if systemctl status hostapd | grep "(running)" >/dev/null 2>&1
       then #hotspot running and ssid in range
             echo "Hotspot running and ssid in range" >> /home/pi/alfetta/var/log/autohostspot.log
              KillHotspot
              echo "Hotspot Deactivated, Bringing Wifi Up" >> /home/pi/alfetta/var/log/autohostspot.log
              /sbin/wpa_supplicant -B -i "$wifidev" -c /etc/wpa_supplicant/wpa_supplicant.conf >/dev/null 2>&1
              ChkWifiUp
       elif { /sbin/wpa_cli -i "$wifidev" status | grep 'ip_address'; } >/dev/null 2>&1
       then #Already connected
              echo "Wifi already connected to a network" >> /home/pi/alfetta/var/log/autohostspot.log
#               KillHotspot 
      else #ssid exists and no hotspot running connect to wifi network
              echo "Connecting to the WiFi Network" >> /home/pi/alfetta/var/log/autohostspot.log
              /sbin/wpa_supplicant -B -i "$wifidev" -c /etc/wpa_supplicant/wpa_supplicant.conf >/dev/null 2>&1
              ChkWifiUp
       fi
else #ssid or MAC address not in range
       if systemctl status hostapd | grep "(running)" >/dev/null 2>&1
       then
              echo "Hostspot already active" >> /home/pi/alfetta/var/log/autohostspot.log
       elif { /sbin/wpa_cli status | grep "$wifidev"; } >/dev/null 2>&1
       then
              echo "Cleaning wifi files and Activating Hotspot" >> /home/pi/alfetta/var/log/autohostspot.log
              /sbin/wpa_cli terminate >/dev/null 2>&1
              ip addr flush "$wifidev"
              ip link set dev "$wifidev" down
              rm -r /var/run/wpa_supplicant >/dev/null 2>&1
              ip link set dev "$wifidev" up
              createAdHocNetwork
       else #No SSID, activating Hotspot
              echo "No SSID, activating Hotspot " >> /home/pi/alfetta/var/log/autohostspot.log
              createAdHocNetwork
       fi

fi
cable=$(cat  /sys/class/net/eth0/carrier);
echo $cable
if [ $cable -eq 1 ]
then
   echo "Cable Connected" >> /home/pi/alfetta/var/log/autohostspot.log
	KillHotspot
fi
